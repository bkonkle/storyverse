# WARNING: This file is automatically generated. Do not edit.
schema {
  query: Query
  mutation: Mutation
}
type Mutation {
  """Create a new User Profile"""
  createProfile(input: CreateProfileInput!): MutateProfileResult!
  """Create a new Series"""
  createSeries(input: CreateSeriesInput!): MutateSeriesResult!
  """Create a new Story"""
  createStory(input: CreateStoryInput!): MutateStoryResult!
  """Create a new Universe"""
  createUniverse(input: CreateUniverseInput!): MutateUniverseResult!
  """Create a new User"""
  createUser(input: CreateUserInput!): MutateUserResult!
  """Remove an existing User Profile by ID"""
  deleteProfile(id: ID!): MutateProfileResult!
  """Remove an existing Series by ID"""
  deleteSeries(id: ID!): MutateSeriesResult!
  """Remove an existing Story by ID"""
  deleteStory(id: ID!): MutateStoryResult!
  """Remove an existing Universe by ID"""
  deleteUniverse(id: ID!): MutateUniverseResult!
  """Get the current User if existing, or create one if not."""
  getOrCreateCurrentUser(input: CreateUserInput!): MutateUserResult!
  """Grant Roles to a Profile for a Series"""
  grantSeriesRoles(profileId: ID!, universeId: ID!, roles: [SeriesRoles!]!): Boolean
  """Grant Roles to a Profile for a Universe"""
  grantUniverseRoles(profileId: ID!, universeId: ID!, roles: [UniverseRoles!]!): Boolean
  """Update the currently authenticated User"""
  updateCurrentUser(input: UpdateUserInput!): MutateUserResult!
  """Update an existing User Profile by ID"""
  updateProfile(id: ID!, input: UpdateProfileInput!): MutateProfileResult!
  """Update an existing Series by ID"""
  updateSeries(id: ID!, input: UpdateSeriesInput!): MutateSeriesResult!
  """Update an existing Story by ID"""
  updateStory(id: ID!, input: UpdateStoryInput!): MutateStoryResult!
  """Update an existing Universe by ID"""
  updateUniverse(id: ID!, input: UpdateUniverseInput!): MutateUniverseResult!
}
"""Input to create a new User Profile"""
input CreateProfileInput {
  email: String!
  displayName: String
  picture: String
  content: JSONObject
  userId: String!
}
"""Input to update an existing User Profile"""
input UpdateProfileInput {
  email: String
  displayName: String
  picture: String
  content: JSONObject
  userId: String
}
type MutateProfileResult {
  profile: Profile
}
type Query {
  """Get the currently authenticated User"""
  getCurrentUser: User
  """Get many User Profiles, with optional filtering conditions"""
  getManyProfiles(where: ProfileCondition, orderBy: [ProfilesOrderBy!], pageSize: Int, page: Int): ProfilesPage!
  """Get many Series, with optional filtering conditions"""
  getManySeries(where: SeriesCondition, orderBy: [SeriesOrderBy!], pageSize: Int, page: Int): SeriesPage!
  """Get many Stories, with optional filtering conditions"""
  getManyStories(where: StoryCondition, orderBy: [StoriesOrderBy!], pageSize: Int, page: Int): StoriesPage!
  """Get many Universes, with optional filtering conditions"""
  getManyUniverses(where: UniverseCondition, orderBy: [UniversesOrderBy!], pageSize: Int, page: Int): UniversesPage!
  """Get an existing User Profile by ID"""
  getProfile(id: ID!): Profile
  """Get an existing Series by ID"""
  getSeries(id: ID!): Series
  """Get an existing Story by ID"""
  getStory(id: ID!): Story
  """Get an existing Universe by ID"""
  getUniverse(id: ID!): Universe
}
"""A User Profile"""
type Profile {
  id: ID!
  """An email address"""
  email: String
  """A display name"""
  displayName: String
  """A Profile photo"""
  picture: String
  """Editor json content for the Profile body"""
  content: JSONObject
  """The id of the User that created the Profile"""
  userId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}
type ProfilesPage {
  data: [Profile!]!
  count: Int!
  total: Int!
  page: Int!
  pageCount: Int!
}
input ProfileCondition {
  id: ID
  email: String
  displayName: String
  picture: String
  content: JSONObject
  userId: ID
  createdAt: DateTime
  updatedAt: DateTime
}
enum ProfilesOrderBy {
  ID_ASC
  ID_DESC
  EMAIL_ASC
  EMAIL_DESC
  DISPLAY_NAME_ASC
  DISPLAY_NAME_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}
"""Input to create a new Series"""
input CreateSeriesInput {
  name: String!
  description: JSONObject
  universeId: ID!
}
"""Input to update an existing Series"""
input UpdateSeriesInput {
  name: String
  description: JSONObject
  universeId: ID
}
type MutateSeriesResult {
  series: Series
}
"""A Series"""
type Series {
  id: ID!
  """The Series name"""
  name: String!
  """Editor json content for the Series description"""
  description: JSONObject
  """A cover image for the Universe"""
  picture: String
  """The id of the Universe that the Series belongs to"""
  universeId: ID!
  """The Universe that the Series belongs to"""
  universe: Universe!
  createdAt: DateTime!
  updatedAt: DateTime!
}
type SeriesPage {
  data: [Series!]!
  count: Int!
  total: Int!
  page: Int!
  pageCount: Int!
}
input SeriesCondition {
  name: String
  universeId: ID
}
enum SeriesOrderBy {
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}
enum SeriesRoles {
  SERIES_MANAGER
}
"""Input to create a new Story"""
input CreateStoryInput {
  name: String!
  volume: Int
  issue: Int
  summary: JSONObject
  content: JSONObject
  seriesId: ID!
}
"""Input to update an existing Story"""
input UpdateStoryInput {
  name: String
  volume: Int
  issue: Int
  summary: JSONObject
  content: JSONObject
  seriesId: ID
}
type MutateStoryResult {
  story: Story
}
"""A Story"""
type Story {
  id: ID!
  """The Story name"""
  name: String!
  """The Story volume number"""
  volume: Int
  """The Story issue number within the volume"""
  issue: Int
  """Editor json content for the Story summary"""
  summary: JSONObject
  """Editor json content for the Story content"""
  content: JSONObject
  """A cover image for the Universe"""
  picture: String
  """The id of the Series that the Story belongs to"""
  seriesId: ID!
  """The Series that the Story belongs to"""
  series: Series!
  createdAt: DateTime!
  updatedAt: DateTime!
}
type StoriesPage {
  data: [Story!]!
  count: Int!
  total: Int!
  page: Int!
  pageCount: Int!
}
input StoryCondition {
  name: String
  seriesId: ID
}
enum StoriesOrderBy {
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}
"""A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format."""
scalar DateTime
scalar JSON
scalar JSONObject
"""Input to create a new Universe"""
input CreateUniverseInput {
  name: String!
  description: JSONObject
  ownerProfileId: ID!
}
"""Input to update an existing Universe"""
input UpdateUniverseInput {
  name: String
  description: JSONObject
  ownerProfileId: ID
}
type MutateUniverseResult {
  universe: Universe
}
"""A Universe"""
type Universe {
  id: ID!
  """The Universe's name"""
  name: String!
  """Editor json content for the Universe's description"""
  description: JSONObject
  """A cover image for the Universe"""
  picture: String
  """The id of the Profile that owns the Universe"""
  ownerProfileId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}
type UniversesPage {
  data: [Universe!]!
  count: Int!
  total: Int!
  page: Int!
  pageCount: Int!
}
input UniverseCondition {
  name: String
  ownerProfileId: ID
}
enum UniversesOrderBy {
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}
enum UniverseRoles {
  UNIVERSE_MANAGER
  UNIVERSE_ADMIN
}
"""Input to create a new User"""
input CreateUserInput {
  username: String!
  profile: CreateUserProfileInput
}
input CreateUserProfileInput {
  email: String!
  displayName: String
  picture: String
  content: JSONObject
}
"""Input to update an existing User"""
input UpdateUserInput {
  username: String
  isActive: Boolean
}
type MutateUserResult {
  user: User
}
"""A User"""
type User {
  id: ID!
  """The User's login id - usually their email address"""
  username: String!
  """If false, the User is suspended"""
  isActive: Boolean!
  """The User's current Profile, if one is associated."""
  profile: Profile
  createdAt: DateTime!
  updatedAt: DateTime!
}